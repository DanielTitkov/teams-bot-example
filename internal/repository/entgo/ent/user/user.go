// Code generated by entc, DO NOT EDIT.

package user

import (
	"time"
)

const (
	// Label holds the string label denoting the user type in the database.
	Label = "user"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCreateTime holds the string denoting the create_time field in the database.
	FieldCreateTime = "create_time"
	// FieldUpdateTime holds the string denoting the update_time field in the database.
	FieldUpdateTime = "update_time"
	// FieldUsername holds the string denoting the username field in the database.
	FieldUsername = "username"
	// FieldDisplayName holds the string denoting the display_name field in the database.
	FieldDisplayName = "display_name"
	// FieldEmail holds the string denoting the email field in the database.
	FieldEmail = "email"
	// FieldPasswordHash holds the string denoting the password_hash field in the database.
	FieldPasswordHash = "password_hash"
	// FieldService holds the string denoting the service field in the database.
	FieldService = "service"
	// FieldTeamsID holds the string denoting the teams_id field in the database.
	FieldTeamsID = "teams_id"
	// FieldTelegramID holds the string denoting the telegram_id field in the database.
	FieldTelegramID = "telegram_id"
	// FieldSlackID holds the string denoting the slack_id field in the database.
	FieldSlackID = "slack_id"

	// EdgeDialog holds the string denoting the dialog edge name in mutations.
	EdgeDialog = "dialog"
	// EdgeProjects holds the string denoting the projects edge name in mutations.
	EdgeProjects = "projects"

	// Table holds the table name of the user in the database.
	Table = "users"
	// DialogTable is the table the holds the dialog relation/edge.
	DialogTable = "dialogs"
	// DialogInverseTable is the table name for the Dialog entity.
	// It exists in this package in order to avoid circular dependency with the "dialog" package.
	DialogInverseTable = "dialogs"
	// DialogColumn is the table column denoting the dialog relation/edge.
	DialogColumn = "user_dialog"
	// ProjectsTable is the table the holds the projects relation/edge.
	ProjectsTable = "projects"
	// ProjectsInverseTable is the table name for the Project entity.
	// It exists in this package in order to avoid circular dependency with the "project" package.
	ProjectsInverseTable = "projects"
	// ProjectsColumn is the table column denoting the projects relation/edge.
	ProjectsColumn = "user_projects"
)

// Columns holds all SQL columns for user fields.
var Columns = []string{
	FieldID,
	FieldCreateTime,
	FieldUpdateTime,
	FieldUsername,
	FieldDisplayName,
	FieldEmail,
	FieldPasswordHash,
	FieldService,
	FieldTeamsID,
	FieldTelegramID,
	FieldSlackID,
}

var (
	// DefaultCreateTime holds the default value on creation for the create_time field.
	DefaultCreateTime func() time.Time
	// DefaultUpdateTime holds the default value on creation for the update_time field.
	DefaultUpdateTime func() time.Time
	// UpdateDefaultUpdateTime holds the default value on update for the update_time field.
	UpdateDefaultUpdateTime func() time.Time
	// UsernameValidator is a validator for the "username" field. It is called by the builders before save.
	UsernameValidator func(string) error
	// EmailValidator is a validator for the "email" field. It is called by the builders before save.
	EmailValidator func(string) error
	// DefaultService holds the default value on creation for the service field.
	DefaultService bool
)
